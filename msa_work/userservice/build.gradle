plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.green'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    //refresh 환경설정 새로고침
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // metric auto create
    implementation 'io.micrometer:micrometer-registry-prometheus' // to metric from prometheus automatically
    implementation 'io.micrometer:micrometer-core' // metric create  lib

    //zipkin libs
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.brave:brave-instrumentation-spring-web'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.github.openfeign:feign-micrometer'

    //eureka server 등록
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // bootstrap.yml 생성해서 config 서버 위치 지정
//	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'


    implementation 'org.jsoup:jsoup:1.15.4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
